// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hcloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-hcloud/sdk/go/hcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides details about a specific Hetzner Cloud Server Type.
//
// Use this resource to get detailed information about specific Server Type.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-hcloud/sdk/go/hcloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := hcloud.GetServerType(ctx, &hcloud.GetServerTypeArgs{
//				Id: pulumi.IntRef(22),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			byName, err := hcloud.GetServerType(ctx, &hcloud.GetServerTypeArgs{
//				Name: pulumi.StringRef("cx22"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = hcloud.NewServer(ctx, "main", &hcloud.ServerArgs{
//				Name:       pulumi.String("my-server"),
//				Location:   pulumi.String("fsn1"),
//				Image:      pulumi.String("debian-12"),
//				ServerType: pulumi.String(byName.Name),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetServerType(ctx *pulumi.Context, args *GetServerTypeArgs, opts ...pulumi.InvokeOption) (*GetServerTypeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetServerTypeResult
	err := ctx.Invoke("hcloud:index/getServerType:getServerType", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServerType.
type GetServerTypeArgs struct {
	// ID of the Server Type.
	Id *int `pulumi:"id"`
	// Name of the Server Type.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getServerType.
type GetServerTypeResult struct {
	// Architecture of the cpu for a Server of this type.
	Architecture string `pulumi:"architecture"`
	// Category of the Server Type.
	Category string `pulumi:"category"`
	// Number of cpu cores for a Server of this type.
	Cores int `pulumi:"cores"`
	// Type of cpu for a Server of this type.
	CpuType string `pulumi:"cpuType"`
	// Date of the Server Type deprecation announcement.
	//
	// Deprecated: The field is deprecated and will gradually be phased out starting 2025-09-24. Use the deprecation in the locations list instead.
	DeprecationAnnounced string `pulumi:"deprecationAnnounced"`
	// Description of the Server Type.
	Description string `pulumi:"description"`
	// Disk size in GB for a Server of this type.
	Disk int `pulumi:"disk"`
	// ID of the Server Type.
	Id *int `pulumi:"id"`
	// Deprecated: The field is deprecated and will always report 0 after 2024-08-05.
	IncludedTraffic int `pulumi:"includedTraffic"`
	// Whether the Server Type is deprecated.
	//
	// Deprecated: The field is deprecated and will gradually be phased out starting 2025-09-24. Use the deprecation in the locations list instead.
	IsDeprecated bool `pulumi:"isDeprecated"`
	// List of supported Locations for this Server Type.
	Locations []GetServerTypeLocation `pulumi:"locations"`
	// Memory in GB for a Server of this type.
	Memory int `pulumi:"memory"`
	// Name of the Server Type.
	Name *string `pulumi:"name"`
	// Type of boot drive for a Server of this type.
	StorageType string `pulumi:"storageType"`
	// Date of the Server Type removal. After this date, the Server Type cannot be used anymore.
	//
	// Deprecated: The field is deprecated and will gradually be phased out starting 2025-09-24. Use the deprecation in the locations list instead.
	UnavailableAfter string `pulumi:"unavailableAfter"`
}

func GetServerTypeOutput(ctx *pulumi.Context, args GetServerTypeOutputArgs, opts ...pulumi.InvokeOption) GetServerTypeResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetServerTypeResultOutput, error) {
			args := v.(GetServerTypeArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("hcloud:index/getServerType:getServerType", args, GetServerTypeResultOutput{}, options).(GetServerTypeResultOutput), nil
		}).(GetServerTypeResultOutput)
}

// A collection of arguments for invoking getServerType.
type GetServerTypeOutputArgs struct {
	// ID of the Server Type.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Name of the Server Type.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GetServerTypeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerTypeArgs)(nil)).Elem()
}

// A collection of values returned by getServerType.
type GetServerTypeResultOutput struct{ *pulumi.OutputState }

func (GetServerTypeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerTypeResult)(nil)).Elem()
}

func (o GetServerTypeResultOutput) ToGetServerTypeResultOutput() GetServerTypeResultOutput {
	return o
}

func (o GetServerTypeResultOutput) ToGetServerTypeResultOutputWithContext(ctx context.Context) GetServerTypeResultOutput {
	return o
}

// Architecture of the cpu for a Server of this type.
func (o GetServerTypeResultOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerTypeResult) string { return v.Architecture }).(pulumi.StringOutput)
}

// Category of the Server Type.
func (o GetServerTypeResultOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerTypeResult) string { return v.Category }).(pulumi.StringOutput)
}

// Number of cpu cores for a Server of this type.
func (o GetServerTypeResultOutput) Cores() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerTypeResult) int { return v.Cores }).(pulumi.IntOutput)
}

// Type of cpu for a Server of this type.
func (o GetServerTypeResultOutput) CpuType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerTypeResult) string { return v.CpuType }).(pulumi.StringOutput)
}

// Date of the Server Type deprecation announcement.
//
// Deprecated: The field is deprecated and will gradually be phased out starting 2025-09-24. Use the deprecation in the locations list instead.
func (o GetServerTypeResultOutput) DeprecationAnnounced() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerTypeResult) string { return v.DeprecationAnnounced }).(pulumi.StringOutput)
}

// Description of the Server Type.
func (o GetServerTypeResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerTypeResult) string { return v.Description }).(pulumi.StringOutput)
}

// Disk size in GB for a Server of this type.
func (o GetServerTypeResultOutput) Disk() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerTypeResult) int { return v.Disk }).(pulumi.IntOutput)
}

// ID of the Server Type.
func (o GetServerTypeResultOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetServerTypeResult) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Deprecated: The field is deprecated and will always report 0 after 2024-08-05.
func (o GetServerTypeResultOutput) IncludedTraffic() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerTypeResult) int { return v.IncludedTraffic }).(pulumi.IntOutput)
}

// Whether the Server Type is deprecated.
//
// Deprecated: The field is deprecated and will gradually be phased out starting 2025-09-24. Use the deprecation in the locations list instead.
func (o GetServerTypeResultOutput) IsDeprecated() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerTypeResult) bool { return v.IsDeprecated }).(pulumi.BoolOutput)
}

// List of supported Locations for this Server Type.
func (o GetServerTypeResultOutput) Locations() GetServerTypeLocationArrayOutput {
	return o.ApplyT(func(v GetServerTypeResult) []GetServerTypeLocation { return v.Locations }).(GetServerTypeLocationArrayOutput)
}

// Memory in GB for a Server of this type.
func (o GetServerTypeResultOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerTypeResult) int { return v.Memory }).(pulumi.IntOutput)
}

// Name of the Server Type.
func (o GetServerTypeResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServerTypeResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of boot drive for a Server of this type.
func (o GetServerTypeResultOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerTypeResult) string { return v.StorageType }).(pulumi.StringOutput)
}

// Date of the Server Type removal. After this date, the Server Type cannot be used anymore.
//
// Deprecated: The field is deprecated and will gradually be phased out starting 2025-09-24. Use the deprecation in the locations list instead.
func (o GetServerTypeResultOutput) UnavailableAfter() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerTypeResult) string { return v.UnavailableAfter }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetServerTypeResultOutput{})
}

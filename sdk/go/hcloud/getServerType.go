// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hcloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-hcloud/sdk/go/hcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides details about a specific Hetzner Cloud Server Type.
// Use this resource to get detailed information about specific Server Type.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-hcloud/sdk/go/hcloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := hcloud.GetServerType(ctx, &hcloud.GetServerTypeArgs{
//				Name: pulumi.StringRef("cx22"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = hcloud.GetServerType(ctx, &hcloud.GetServerTypeArgs{
//				Id: pulumi.IntRef(1),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetServerType(ctx *pulumi.Context, args *GetServerTypeArgs, opts ...pulumi.InvokeOption) (*GetServerTypeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetServerTypeResult
	err := ctx.Invoke("hcloud:index/getServerType:getServerType", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServerType.
type GetServerTypeArgs struct {
	// (Optional, string) Date when the deprecation of the server type was announced. Only set when the server type is deprecated.
	DeprecationAnnounced *string `pulumi:"deprecationAnnounced"`
	// ID of the server_type.
	Id *int `pulumi:"id"`
	// Name of the server_type.
	Name *string `pulumi:"name"`
	// (Optional, string) Date when the server type will not be available for new servers. Only set when the server type is deprecated.
	UnavailableAfter *string `pulumi:"unavailableAfter"`
}

// A collection of values returned by getServerType.
type GetServerTypeResult struct {
	// (string) Architecture of the server_type.
	Architecture string `pulumi:"architecture"`
	// (int) Number of cpu cores a Server of this type will have.
	Cores   int    `pulumi:"cores"`
	CpuType string `pulumi:"cpuType"`
	// (Optional, string) Date when the deprecation of the server type was announced. Only set when the server type is deprecated.
	DeprecationAnnounced string `pulumi:"deprecationAnnounced"`
	// (string) Description of the server_type.
	Description string `pulumi:"description"`
	// (int) Disk size a Server of this type will have in GB.
	Disk int `pulumi:"disk"`
	// (int) Unique ID of the server_type.
	Id int `pulumi:"id"`
	// (int) Free traffic per month in bytes. **Warning**: This field is deprecated and will report `0` after 2024-08-05.
	//
	// Deprecated: The field is deprecated and will always report 0 after 2024-08-05.
	IncludedTraffic int `pulumi:"includedTraffic"`
	// (bool) Deprecation status of server type.
	IsDeprecated bool `pulumi:"isDeprecated"`
	// (int) Memory a Server of this type will have in GB.
	Memory int `pulumi:"memory"`
	// (string) Name of the server_type.
	Name        string `pulumi:"name"`
	StorageType string `pulumi:"storageType"`
	// (Optional, string) Date when the server type will not be available for new servers. Only set when the server type is deprecated.
	UnavailableAfter string `pulumi:"unavailableAfter"`
}

func GetServerTypeOutput(ctx *pulumi.Context, args GetServerTypeOutputArgs, opts ...pulumi.InvokeOption) GetServerTypeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetServerTypeResultOutput, error) {
			args := v.(GetServerTypeArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetServerTypeResult
			secret, err := ctx.InvokePackageRaw("hcloud:index/getServerType:getServerType", args, &rv, "", opts...)
			if err != nil {
				return GetServerTypeResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetServerTypeResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetServerTypeResultOutput), nil
			}
			return output, nil
		}).(GetServerTypeResultOutput)
}

// A collection of arguments for invoking getServerType.
type GetServerTypeOutputArgs struct {
	// (Optional, string) Date when the deprecation of the server type was announced. Only set when the server type is deprecated.
	DeprecationAnnounced pulumi.StringPtrInput `pulumi:"deprecationAnnounced"`
	// ID of the server_type.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Name of the server_type.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Optional, string) Date when the server type will not be available for new servers. Only set when the server type is deprecated.
	UnavailableAfter pulumi.StringPtrInput `pulumi:"unavailableAfter"`
}

func (GetServerTypeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerTypeArgs)(nil)).Elem()
}

// A collection of values returned by getServerType.
type GetServerTypeResultOutput struct{ *pulumi.OutputState }

func (GetServerTypeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerTypeResult)(nil)).Elem()
}

func (o GetServerTypeResultOutput) ToGetServerTypeResultOutput() GetServerTypeResultOutput {
	return o
}

func (o GetServerTypeResultOutput) ToGetServerTypeResultOutputWithContext(ctx context.Context) GetServerTypeResultOutput {
	return o
}

// (string) Architecture of the server_type.
func (o GetServerTypeResultOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerTypeResult) string { return v.Architecture }).(pulumi.StringOutput)
}

// (int) Number of cpu cores a Server of this type will have.
func (o GetServerTypeResultOutput) Cores() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerTypeResult) int { return v.Cores }).(pulumi.IntOutput)
}

func (o GetServerTypeResultOutput) CpuType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerTypeResult) string { return v.CpuType }).(pulumi.StringOutput)
}

// (Optional, string) Date when the deprecation of the server type was announced. Only set when the server type is deprecated.
func (o GetServerTypeResultOutput) DeprecationAnnounced() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerTypeResult) string { return v.DeprecationAnnounced }).(pulumi.StringOutput)
}

// (string) Description of the server_type.
func (o GetServerTypeResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerTypeResult) string { return v.Description }).(pulumi.StringOutput)
}

// (int) Disk size a Server of this type will have in GB.
func (o GetServerTypeResultOutput) Disk() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerTypeResult) int { return v.Disk }).(pulumi.IntOutput)
}

// (int) Unique ID of the server_type.
func (o GetServerTypeResultOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerTypeResult) int { return v.Id }).(pulumi.IntOutput)
}

// (int) Free traffic per month in bytes. **Warning**: This field is deprecated and will report `0` after 2024-08-05.
//
// Deprecated: The field is deprecated and will always report 0 after 2024-08-05.
func (o GetServerTypeResultOutput) IncludedTraffic() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerTypeResult) int { return v.IncludedTraffic }).(pulumi.IntOutput)
}

// (bool) Deprecation status of server type.
func (o GetServerTypeResultOutput) IsDeprecated() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerTypeResult) bool { return v.IsDeprecated }).(pulumi.BoolOutput)
}

// (int) Memory a Server of this type will have in GB.
func (o GetServerTypeResultOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerTypeResult) int { return v.Memory }).(pulumi.IntOutput)
}

// (string) Name of the server_type.
func (o GetServerTypeResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerTypeResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetServerTypeResultOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerTypeResult) string { return v.StorageType }).(pulumi.StringOutput)
}

// (Optional, string) Date when the server type will not be available for new servers. Only set when the server type is deprecated.
func (o GetServerTypeResultOutput) UnavailableAfter() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerTypeResult) string { return v.UnavailableAfter }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetServerTypeResultOutput{})
}

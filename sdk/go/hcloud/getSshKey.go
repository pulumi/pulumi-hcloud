// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hcloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-hcloud/sdk/go/hcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-hcloud/sdk/go/hcloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			byId, err := hcloud.LookupSshKey(ctx, &hcloud.LookupSshKeyArgs{
//				Id: pulumi.IntRef(24332897),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			byName, err := hcloud.LookupSshKey(ctx, &hcloud.LookupSshKeyArgs{
//				Name: pulumi.StringRef("my-ssh-key"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			byFingerprint, err := hcloud.LookupSshKey(ctx, &hcloud.LookupSshKeyArgs{
//				Fingerprint: pulumi.StringRef("55:58:dc:bd:61:6e:7d:24:07:a7:7d:9b:be:99:83:a8"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = hcloud.LookupSshKey(ctx, &hcloud.LookupSshKeyArgs{
//				WithSelector: pulumi.StringRef("key=value"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = hcloud.NewServer(ctx, "main", &hcloud.ServerArgs{
//				SshKeys: pulumi.StringArray{
//					pulumi.Int(byId.Id),
//					pulumi.Int(byName.Id),
//					pulumi.Int(byFingerprint.Id),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSshKey(ctx *pulumi.Context, args *LookupSshKeyArgs, opts ...pulumi.InvokeOption) (*LookupSshKeyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSshKeyResult
	err := ctx.Invoke("hcloud:index/getSshKey:getSshKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSshKey.
type LookupSshKeyArgs struct {
	// Fingerprint of the SSH Key.
	Fingerprint *string `pulumi:"fingerprint"`
	// ID of the SSH Key.
	Id *int `pulumi:"id"`
	// Name of the SSH Key.
	Name *string `pulumi:"name"`
	// Filter results using a [Label Selector](https://docs.hetzner.cloud/reference/cloud#label-selector).
	//
	// Deprecated: Please use the withSelector property instead.
	Selector *string `pulumi:"selector"`
	// Filter results using a [Label Selector](https://docs.hetzner.cloud/reference/cloud#label-selector).
	WithSelector *string `pulumi:"withSelector"`
}

// A collection of values returned by getSshKey.
type LookupSshKeyResult struct {
	// Fingerprint of the SSH Key.
	Fingerprint *string `pulumi:"fingerprint"`
	// ID of the SSH Key.
	Id *int `pulumi:"id"`
	// User-defined [labels](https://docs.hetzner.cloud/reference/cloud#labels) (key-value pairs) for the resource.
	Labels map[string]string `pulumi:"labels"`
	// Name of the SSH Key.
	Name *string `pulumi:"name"`
	// Public key of the SSH Key pair.
	PublicKey string `pulumi:"publicKey"`
	// Filter results using a [Label Selector](https://docs.hetzner.cloud/reference/cloud#label-selector).
	//
	// Deprecated: Please use the withSelector property instead.
	Selector *string `pulumi:"selector"`
	// Filter results using a [Label Selector](https://docs.hetzner.cloud/reference/cloud#label-selector).
	WithSelector *string `pulumi:"withSelector"`
}

func LookupSshKeyOutput(ctx *pulumi.Context, args LookupSshKeyOutputArgs, opts ...pulumi.InvokeOption) LookupSshKeyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSshKeyResultOutput, error) {
			args := v.(LookupSshKeyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("hcloud:index/getSshKey:getSshKey", args, LookupSshKeyResultOutput{}, options).(LookupSshKeyResultOutput), nil
		}).(LookupSshKeyResultOutput)
}

// A collection of arguments for invoking getSshKey.
type LookupSshKeyOutputArgs struct {
	// Fingerprint of the SSH Key.
	Fingerprint pulumi.StringPtrInput `pulumi:"fingerprint"`
	// ID of the SSH Key.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Name of the SSH Key.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Filter results using a [Label Selector](https://docs.hetzner.cloud/reference/cloud#label-selector).
	//
	// Deprecated: Please use the withSelector property instead.
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// Filter results using a [Label Selector](https://docs.hetzner.cloud/reference/cloud#label-selector).
	WithSelector pulumi.StringPtrInput `pulumi:"withSelector"`
}

func (LookupSshKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSshKeyArgs)(nil)).Elem()
}

// A collection of values returned by getSshKey.
type LookupSshKeyResultOutput struct{ *pulumi.OutputState }

func (LookupSshKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSshKeyResult)(nil)).Elem()
}

func (o LookupSshKeyResultOutput) ToLookupSshKeyResultOutput() LookupSshKeyResultOutput {
	return o
}

func (o LookupSshKeyResultOutput) ToLookupSshKeyResultOutputWithContext(ctx context.Context) LookupSshKeyResultOutput {
	return o
}

// Fingerprint of the SSH Key.
func (o LookupSshKeyResultOutput) Fingerprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSshKeyResult) *string { return v.Fingerprint }).(pulumi.StringPtrOutput)
}

// ID of the SSH Key.
func (o LookupSshKeyResultOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupSshKeyResult) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// User-defined [labels](https://docs.hetzner.cloud/reference/cloud#labels) (key-value pairs) for the resource.
func (o LookupSshKeyResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSshKeyResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the SSH Key.
func (o LookupSshKeyResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSshKeyResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Public key of the SSH Key pair.
func (o LookupSshKeyResultOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSshKeyResult) string { return v.PublicKey }).(pulumi.StringOutput)
}

// Filter results using a [Label Selector](https://docs.hetzner.cloud/reference/cloud#label-selector).
//
// Deprecated: Please use the withSelector property instead.
func (o LookupSshKeyResultOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSshKeyResult) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// Filter results using a [Label Selector](https://docs.hetzner.cloud/reference/cloud#label-selector).
func (o LookupSshKeyResultOutput) WithSelector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSshKeyResult) *string { return v.WithSelector }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSshKeyResultOutput{})
}

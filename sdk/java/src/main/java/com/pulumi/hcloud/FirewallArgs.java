// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.hcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.hcloud.inputs.FirewallApplyToArgs;
import com.pulumi.hcloud.inputs.FirewallRuleArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirewallArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirewallArgs Empty = new FirewallArgs();

    /**
     * Resources the firewall should be assigned to
     * 
     */
    @Import(name="applyTos")
    private @Nullable Output<List<FirewallApplyToArgs>> applyTos;

    /**
     * @return Resources the firewall should be assigned to
     * 
     */
    public Optional<Output<List<FirewallApplyToArgs>>> applyTos() {
        return Optional.ofNullable(this.applyTos);
    }

    /**
     * User-defined labels (key-value pairs) should be created with.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return User-defined labels (key-value pairs) should be created with.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Name of the Firewall.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the Firewall.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Configuration of a Rule from this Firewall.
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<FirewallRuleArgs>> rules;

    /**
     * @return Configuration of a Rule from this Firewall.
     * 
     */
    public Optional<Output<List<FirewallRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    private FirewallArgs() {}

    private FirewallArgs(FirewallArgs $) {
        this.applyTos = $.applyTos;
        this.labels = $.labels;
        this.name = $.name;
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallArgs $;

        public Builder() {
            $ = new FirewallArgs();
        }

        public Builder(FirewallArgs defaults) {
            $ = new FirewallArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applyTos Resources the firewall should be assigned to
         * 
         * @return builder
         * 
         */
        public Builder applyTos(@Nullable Output<List<FirewallApplyToArgs>> applyTos) {
            $.applyTos = applyTos;
            return this;
        }

        /**
         * @param applyTos Resources the firewall should be assigned to
         * 
         * @return builder
         * 
         */
        public Builder applyTos(List<FirewallApplyToArgs> applyTos) {
            return applyTos(Output.of(applyTos));
        }

        /**
         * @param applyTos Resources the firewall should be assigned to
         * 
         * @return builder
         * 
         */
        public Builder applyTos(FirewallApplyToArgs... applyTos) {
            return applyTos(List.of(applyTos));
        }

        /**
         * @param labels User-defined labels (key-value pairs) should be created with.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels User-defined labels (key-value pairs) should be created with.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param name Name of the Firewall.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Firewall.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param rules Configuration of a Rule from this Firewall.
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<FirewallRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules Configuration of a Rule from this Firewall.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<FirewallRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules Configuration of a Rule from this Firewall.
         * 
         * @return builder
         * 
         */
        public Builder rules(FirewallRuleArgs... rules) {
            return rules(List.of(rules));
        }

        public FirewallArgs build() {
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.hcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.hcloud.outputs.GetImagesImage;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetImagesResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return (list) List of all matching images. See `data.hcloud_image` for schema.
     * 
     */
    private List<GetImagesImage> images;
    private @Nullable Boolean includeDeprecated;
    private @Nullable Boolean mostRecent;
    private @Nullable List<String> withArchitectures;
    private @Nullable String withSelector;
    private @Nullable List<String> withStatuses;

    private GetImagesResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return (list) List of all matching images. See `data.hcloud_image` for schema.
     * 
     */
    public List<GetImagesImage> images() {
        return this.images;
    }
    public Optional<Boolean> includeDeprecated() {
        return Optional.ofNullable(this.includeDeprecated);
    }
    public Optional<Boolean> mostRecent() {
        return Optional.ofNullable(this.mostRecent);
    }
    public List<String> withArchitectures() {
        return this.withArchitectures == null ? List.of() : this.withArchitectures;
    }
    public Optional<String> withSelector() {
        return Optional.ofNullable(this.withSelector);
    }
    public List<String> withStatuses() {
        return this.withStatuses == null ? List.of() : this.withStatuses;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImagesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<GetImagesImage> images;
        private @Nullable Boolean includeDeprecated;
        private @Nullable Boolean mostRecent;
        private @Nullable List<String> withArchitectures;
        private @Nullable String withSelector;
        private @Nullable List<String> withStatuses;
        public Builder() {}
        public Builder(GetImagesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.images = defaults.images;
    	      this.includeDeprecated = defaults.includeDeprecated;
    	      this.mostRecent = defaults.mostRecent;
    	      this.withArchitectures = defaults.withArchitectures;
    	      this.withSelector = defaults.withSelector;
    	      this.withStatuses = defaults.withStatuses;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetImagesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder images(List<GetImagesImage> images) {
            if (images == null) {
              throw new MissingRequiredPropertyException("GetImagesResult", "images");
            }
            this.images = images;
            return this;
        }
        public Builder images(GetImagesImage... images) {
            return images(List.of(images));
        }
        @CustomType.Setter
        public Builder includeDeprecated(@Nullable Boolean includeDeprecated) {

            this.includeDeprecated = includeDeprecated;
            return this;
        }
        @CustomType.Setter
        public Builder mostRecent(@Nullable Boolean mostRecent) {

            this.mostRecent = mostRecent;
            return this;
        }
        @CustomType.Setter
        public Builder withArchitectures(@Nullable List<String> withArchitectures) {

            this.withArchitectures = withArchitectures;
            return this;
        }
        public Builder withArchitectures(String... withArchitectures) {
            return withArchitectures(List.of(withArchitectures));
        }
        @CustomType.Setter
        public Builder withSelector(@Nullable String withSelector) {

            this.withSelector = withSelector;
            return this;
        }
        @CustomType.Setter
        public Builder withStatuses(@Nullable List<String> withStatuses) {

            this.withStatuses = withStatuses;
            return this;
        }
        public Builder withStatuses(String... withStatuses) {
            return withStatuses(List.of(withStatuses));
        }
        public GetImagesResult build() {
            final var _resultValue = new GetImagesResult();
            _resultValue.id = id;
            _resultValue.images = images;
            _resultValue.includeDeprecated = includeDeprecated;
            _resultValue.mostRecent = mostRecent;
            _resultValue.withArchitectures = withArchitectures;
            _resultValue.withSelector = withSelector;
            _resultValue.withStatuses = withStatuses;
            return _resultValue;
        }
    }
}

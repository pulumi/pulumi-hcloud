// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.hcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPlacementGroupResult {
    /**
     * @return (int) Unique ID of the Placement Group.
     * 
     */
    private Integer id;
    /**
     * @return (map) User-defined labels (key-value pairs)
     * 
     */
    private Map<String,String> labels;
    private @Nullable Boolean mostRecent;
    /**
     * @return (string) Name of the Placement Group.
     * 
     */
    private String name;
    private List<Integer> servers;
    /**
     * @return (string)  Type of the Placement Group.
     * 
     */
    private String type;
    private @Nullable String withSelector;

    private GetPlacementGroupResult() {}
    /**
     * @return (int) Unique ID of the Placement Group.
     * 
     */
    public Integer id() {
        return this.id;
    }
    /**
     * @return (map) User-defined labels (key-value pairs)
     * 
     */
    public Map<String,String> labels() {
        return this.labels;
    }
    public Optional<Boolean> mostRecent() {
        return Optional.ofNullable(this.mostRecent);
    }
    /**
     * @return (string) Name of the Placement Group.
     * 
     */
    public String name() {
        return this.name;
    }
    public List<Integer> servers() {
        return this.servers;
    }
    /**
     * @return (string)  Type of the Placement Group.
     * 
     */
    public String type() {
        return this.type;
    }
    public Optional<String> withSelector() {
        return Optional.ofNullable(this.withSelector);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPlacementGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer id;
        private Map<String,String> labels;
        private @Nullable Boolean mostRecent;
        private String name;
        private List<Integer> servers;
        private String type;
        private @Nullable String withSelector;
        public Builder() {}
        public Builder(GetPlacementGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.labels = defaults.labels;
    	      this.mostRecent = defaults.mostRecent;
    	      this.name = defaults.name;
    	      this.servers = defaults.servers;
    	      this.type = defaults.type;
    	      this.withSelector = defaults.withSelector;
        }

        @CustomType.Setter
        public Builder id(Integer id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPlacementGroupResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder labels(Map<String,String> labels) {
            if (labels == null) {
              throw new MissingRequiredPropertyException("GetPlacementGroupResult", "labels");
            }
            this.labels = labels;
            return this;
        }
        @CustomType.Setter
        public Builder mostRecent(@Nullable Boolean mostRecent) {

            this.mostRecent = mostRecent;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetPlacementGroupResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder servers(List<Integer> servers) {
            if (servers == null) {
              throw new MissingRequiredPropertyException("GetPlacementGroupResult", "servers");
            }
            this.servers = servers;
            return this;
        }
        public Builder servers(Integer... servers) {
            return servers(List.of(servers));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetPlacementGroupResult", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder withSelector(@Nullable String withSelector) {

            this.withSelector = withSelector;
            return this;
        }
        public GetPlacementGroupResult build() {
            final var _resultValue = new GetPlacementGroupResult();
            _resultValue.id = id;
            _resultValue.labels = labels;
            _resultValue.mostRecent = mostRecent;
            _resultValue.name = name;
            _resultValue.servers = servers;
            _resultValue.type = type;
            _resultValue.withSelector = withSelector;
            return _resultValue;
        }
    }
}

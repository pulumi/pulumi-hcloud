// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.hcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProviderArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProviderArgs Empty = new ProviderArgs();

    /**
     * The Hetzner Cloud API endpoint, can be used to override the default API Endpoint https://api.hetzner.cloud/v1.
     * 
     */
    @Import(name="endpoint")
    private @Nullable Output<String> endpoint;

    /**
     * @return The Hetzner Cloud API endpoint, can be used to override the default API Endpoint https://api.hetzner.cloud/v1.
     * 
     */
    public Optional<Output<String>> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }

    /**
     * The type of function to be used during the polling.
     * 
     */
    @Import(name="pollFunction")
    private @Nullable Output<String> pollFunction;

    /**
     * @return The type of function to be used during the polling.
     * 
     */
    public Optional<Output<String>> pollFunction() {
        return Optional.ofNullable(this.pollFunction);
    }

    /**
     * The interval at which actions are polled by the client. Default `500ms`. Increase this interval if you run into rate limiting errors.
     * 
     */
    @Import(name="pollInterval")
    private @Nullable Output<String> pollInterval;

    /**
     * @return The interval at which actions are polled by the client. Default `500ms`. Increase this interval if you run into rate limiting errors.
     * 
     */
    public Optional<Output<String>> pollInterval() {
        return Optional.ofNullable(this.pollInterval);
    }

    /**
     * The Hetzner Cloud API token, can also be specified with the HCLOUD_TOKEN environment variable.
     * 
     */
    @Import(name="token")
    private @Nullable Output<String> token;

    /**
     * @return The Hetzner Cloud API token, can also be specified with the HCLOUD_TOKEN environment variable.
     * 
     */
    public Optional<Output<String>> token() {
        return Optional.ofNullable(this.token);
    }

    private ProviderArgs() {}

    private ProviderArgs(ProviderArgs $) {
        this.endpoint = $.endpoint;
        this.pollFunction = $.pollFunction;
        this.pollInterval = $.pollInterval;
        this.token = $.token;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderArgs $;

        public Builder() {
            $ = new ProviderArgs();
        }

        public Builder(ProviderArgs defaults) {
            $ = new ProviderArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param endpoint The Hetzner Cloud API endpoint, can be used to override the default API Endpoint https://api.hetzner.cloud/v1.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(@Nullable Output<String> endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        /**
         * @param endpoint The Hetzner Cloud API endpoint, can be used to override the default API Endpoint https://api.hetzner.cloud/v1.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(String endpoint) {
            return endpoint(Output.of(endpoint));
        }

        /**
         * @param pollFunction The type of function to be used during the polling.
         * 
         * @return builder
         * 
         */
        public Builder pollFunction(@Nullable Output<String> pollFunction) {
            $.pollFunction = pollFunction;
            return this;
        }

        /**
         * @param pollFunction The type of function to be used during the polling.
         * 
         * @return builder
         * 
         */
        public Builder pollFunction(String pollFunction) {
            return pollFunction(Output.of(pollFunction));
        }

        /**
         * @param pollInterval The interval at which actions are polled by the client. Default `500ms`. Increase this interval if you run into rate limiting errors.
         * 
         * @return builder
         * 
         */
        public Builder pollInterval(@Nullable Output<String> pollInterval) {
            $.pollInterval = pollInterval;
            return this;
        }

        /**
         * @param pollInterval The interval at which actions are polled by the client. Default `500ms`. Increase this interval if you run into rate limiting errors.
         * 
         * @return builder
         * 
         */
        public Builder pollInterval(String pollInterval) {
            return pollInterval(Output.of(pollInterval));
        }

        /**
         * @param token The Hetzner Cloud API token, can also be specified with the HCLOUD_TOKEN environment variable.
         * 
         * @return builder
         * 
         */
        public Builder token(@Nullable Output<String> token) {
            $.token = token;
            return this;
        }

        /**
         * @param token The Hetzner Cloud API token, can also be specified with the HCLOUD_TOKEN environment variable.
         * 
         * @return builder
         * 
         */
        public Builder token(String token) {
            return token(Output.of(token));
        }

        public ProviderArgs build() {
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.hcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSshKeyResult {
    /**
     * @return Fingerprint of the SSH Key.
     * 
     */
    private @Nullable String fingerprint;
    /**
     * @return ID of the SSH Key.
     * 
     */
    private @Nullable Integer id;
    /**
     * @return User-defined [labels](https://docs.hetzner.cloud/reference/cloud#labels) (key-value pairs) for the resource.
     * 
     */
    private Map<String,String> labels;
    /**
     * @return Name of the SSH Key.
     * 
     */
    private @Nullable String name;
    /**
     * @return Public key of the SSH Key pair.
     * 
     */
    private String publicKey;
    /**
     * @return Filter results using a [Label Selector](https://docs.hetzner.cloud/reference/cloud#label-selector).
     * 
     * @deprecated
     * Please use the with_selector property instead.
     * 
     */
    @Deprecated /* Please use the with_selector property instead. */
    private @Nullable String selector;
    /**
     * @return Filter results using a [Label Selector](https://docs.hetzner.cloud/reference/cloud#label-selector).
     * 
     */
    private @Nullable String withSelector;

    private GetSshKeyResult() {}
    /**
     * @return Fingerprint of the SSH Key.
     * 
     */
    public Optional<String> fingerprint() {
        return Optional.ofNullable(this.fingerprint);
    }
    /**
     * @return ID of the SSH Key.
     * 
     */
    public Optional<Integer> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return User-defined [labels](https://docs.hetzner.cloud/reference/cloud#labels) (key-value pairs) for the resource.
     * 
     */
    public Map<String,String> labels() {
        return this.labels;
    }
    /**
     * @return Name of the SSH Key.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Public key of the SSH Key pair.
     * 
     */
    public String publicKey() {
        return this.publicKey;
    }
    /**
     * @return Filter results using a [Label Selector](https://docs.hetzner.cloud/reference/cloud#label-selector).
     * 
     * @deprecated
     * Please use the with_selector property instead.
     * 
     */
    @Deprecated /* Please use the with_selector property instead. */
    public Optional<String> selector() {
        return Optional.ofNullable(this.selector);
    }
    /**
     * @return Filter results using a [Label Selector](https://docs.hetzner.cloud/reference/cloud#label-selector).
     * 
     */
    public Optional<String> withSelector() {
        return Optional.ofNullable(this.withSelector);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSshKeyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String fingerprint;
        private @Nullable Integer id;
        private Map<String,String> labels;
        private @Nullable String name;
        private String publicKey;
        private @Nullable String selector;
        private @Nullable String withSelector;
        public Builder() {}
        public Builder(GetSshKeyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fingerprint = defaults.fingerprint;
    	      this.id = defaults.id;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.publicKey = defaults.publicKey;
    	      this.selector = defaults.selector;
    	      this.withSelector = defaults.withSelector;
        }

        @CustomType.Setter
        public Builder fingerprint(@Nullable String fingerprint) {

            this.fingerprint = fingerprint;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable Integer id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder labels(Map<String,String> labels) {
            if (labels == null) {
              throw new MissingRequiredPropertyException("GetSshKeyResult", "labels");
            }
            this.labels = labels;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder publicKey(String publicKey) {
            if (publicKey == null) {
              throw new MissingRequiredPropertyException("GetSshKeyResult", "publicKey");
            }
            this.publicKey = publicKey;
            return this;
        }
        @CustomType.Setter
        public Builder selector(@Nullable String selector) {

            this.selector = selector;
            return this;
        }
        @CustomType.Setter
        public Builder withSelector(@Nullable String withSelector) {

            this.withSelector = withSelector;
            return this;
        }
        public GetSshKeyResult build() {
            final var _resultValue = new GetSshKeyResult();
            _resultValue.fingerprint = fingerprint;
            _resultValue.id = id;
            _resultValue.labels = labels;
            _resultValue.name = name;
            _resultValue.publicKey = publicKey;
            _resultValue.selector = selector;
            _resultValue.withSelector = withSelector;
            return _resultValue;
        }
    }
}

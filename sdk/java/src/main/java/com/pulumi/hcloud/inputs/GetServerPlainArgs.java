// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.hcloud.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.hcloud.inputs.GetServerNetwork;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetServerPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetServerPlainArgs Empty = new GetServerPlainArgs();

    /**
     * ID of the server.
     * 
     */
    @Import(name="id")
    private @Nullable Integer id;

    /**
     * @return ID of the server.
     * 
     */
    public Optional<Integer> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Name of the server.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Name of the server.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * (map) Private Network the server is attached to.
     * 
     */
    @Import(name="networks")
    private @Nullable List<GetServerNetwork> networks;

    /**
     * @return (map) Private Network the server is attached to.
     * 
     */
    public Optional<List<GetServerNetwork>> networks() {
        return Optional.ofNullable(this.networks);
    }

    /**
     * (Optional, string) Placement Group ID the server is assigned to.
     * 
     */
    @Import(name="placementGroupId")
    private @Nullable Integer placementGroupId;

    /**
     * @return (Optional, string) Placement Group ID the server is assigned to.
     * 
     */
    public Optional<Integer> placementGroupId() {
        return Optional.ofNullable(this.placementGroupId);
    }

    /**
     * @deprecated
     * Please use the with_selector property instead.
     * 
     */
    @Deprecated /* Please use the with_selector property instead. */
    @Import(name="selector")
    private @Nullable String selector;

    /**
     * @deprecated
     * Please use the with_selector property instead.
     * 
     */
    @Deprecated /* Please use the with_selector property instead. */
    public Optional<String> selector() {
        return Optional.ofNullable(this.selector);
    }

    /**
     * Label Selector. For more information about possible values, visit the [Hetzner Cloud Documentation](https://docs.hetzner.cloud/reference/cloud#label-selector).
     * 
     */
    @Import(name="withSelector")
    private @Nullable String withSelector;

    /**
     * @return Label Selector. For more information about possible values, visit the [Hetzner Cloud Documentation](https://docs.hetzner.cloud/reference/cloud#label-selector).
     * 
     */
    public Optional<String> withSelector() {
        return Optional.ofNullable(this.withSelector);
    }

    /**
     * List only servers with the specified status, could contain `initializing`, `starting`, `running`, `stopping`, `off`, `deleting`, `rebuilding`, `migrating`, `unknown`.
     * 
     */
    @Import(name="withStatuses")
    private @Nullable List<String> withStatuses;

    /**
     * @return List only servers with the specified status, could contain `initializing`, `starting`, `running`, `stopping`, `off`, `deleting`, `rebuilding`, `migrating`, `unknown`.
     * 
     */
    public Optional<List<String>> withStatuses() {
        return Optional.ofNullable(this.withStatuses);
    }

    private GetServerPlainArgs() {}

    private GetServerPlainArgs(GetServerPlainArgs $) {
        this.id = $.id;
        this.name = $.name;
        this.networks = $.networks;
        this.placementGroupId = $.placementGroupId;
        this.selector = $.selector;
        this.withSelector = $.withSelector;
        this.withStatuses = $.withStatuses;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetServerPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetServerPlainArgs $;

        public Builder() {
            $ = new GetServerPlainArgs();
        }

        public Builder(GetServerPlainArgs defaults) {
            $ = new GetServerPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id ID of the server.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Integer id) {
            $.id = id;
            return this;
        }

        /**
         * @param name Name of the server.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param networks (map) Private Network the server is attached to.
         * 
         * @return builder
         * 
         */
        public Builder networks(@Nullable List<GetServerNetwork> networks) {
            $.networks = networks;
            return this;
        }

        /**
         * @param networks (map) Private Network the server is attached to.
         * 
         * @return builder
         * 
         */
        public Builder networks(GetServerNetwork... networks) {
            return networks(List.of(networks));
        }

        /**
         * @param placementGroupId (Optional, string) Placement Group ID the server is assigned to.
         * 
         * @return builder
         * 
         */
        public Builder placementGroupId(@Nullable Integer placementGroupId) {
            $.placementGroupId = placementGroupId;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Please use the with_selector property instead.
         * 
         */
        @Deprecated /* Please use the with_selector property instead. */
        public Builder selector(@Nullable String selector) {
            $.selector = selector;
            return this;
        }

        /**
         * @param withSelector Label Selector. For more information about possible values, visit the [Hetzner Cloud Documentation](https://docs.hetzner.cloud/reference/cloud#label-selector).
         * 
         * @return builder
         * 
         */
        public Builder withSelector(@Nullable String withSelector) {
            $.withSelector = withSelector;
            return this;
        }

        /**
         * @param withStatuses List only servers with the specified status, could contain `initializing`, `starting`, `running`, `stopping`, `off`, `deleting`, `rebuilding`, `migrating`, `unknown`.
         * 
         * @return builder
         * 
         */
        public Builder withStatuses(@Nullable List<String> withStatuses) {
            $.withStatuses = withStatuses;
            return this;
        }

        /**
         * @param withStatuses List only servers with the specified status, could contain `initializing`, `starting`, `running`, `stopping`, `off`, `deleting`, `rebuilding`, `migrating`, `unknown`.
         * 
         * @return builder
         * 
         */
        public Builder withStatuses(String... withStatuses) {
            return withStatuses(List.of(withStatuses));
        }

        public GetServerPlainArgs build() {
            return $;
        }
    }

}

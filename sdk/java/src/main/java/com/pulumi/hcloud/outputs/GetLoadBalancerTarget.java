// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.hcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetLoadBalancerTarget {
    /**
     * @return (string) Label Selector to add a group of resources based on the label.
     * 
     */
    private String labelSelector;
    /**
     * @return (int) ID of the server which should be a target for this Load Balancer.
     * 
     */
    private Integer serverId;
    /**
     * @return (string) Type of the target. `server` or `label_selector`
     * 
     */
    private String type;

    private GetLoadBalancerTarget() {}
    /**
     * @return (string) Label Selector to add a group of resources based on the label.
     * 
     */
    public String labelSelector() {
        return this.labelSelector;
    }
    /**
     * @return (int) ID of the server which should be a target for this Load Balancer.
     * 
     */
    public Integer serverId() {
        return this.serverId;
    }
    /**
     * @return (string) Type of the target. `server` or `label_selector`
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLoadBalancerTarget defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String labelSelector;
        private Integer serverId;
        private String type;
        public Builder() {}
        public Builder(GetLoadBalancerTarget defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.labelSelector = defaults.labelSelector;
    	      this.serverId = defaults.serverId;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder labelSelector(String labelSelector) {
            this.labelSelector = Objects.requireNonNull(labelSelector);
            return this;
        }
        @CustomType.Setter
        public Builder serverId(Integer serverId) {
            this.serverId = Objects.requireNonNull(serverId);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetLoadBalancerTarget build() {
            final var o = new GetLoadBalancerTarget();
            o.labelSelector = labelSelector;
            o.serverId = serverId;
            o.type = type;
            return o;
        }
    }
}

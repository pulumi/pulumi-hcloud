// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.hcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServerNetworkArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServerNetworkArgs Empty = new ServerNetworkArgs();

    /**
     * Alias IPs the server should have in the Network.
     * 
     */
    @Import(name="aliasIps")
    private @Nullable Output<List<String>> aliasIps;

    /**
     * @return Alias IPs the server should have in the Network.
     * 
     */
    public Optional<Output<List<String>>> aliasIps() {
        return Optional.ofNullable(this.aliasIps);
    }

    /**
     * Specify the IP the server should get in the network
     * 
     */
    @Import(name="ip")
    private @Nullable Output<String> ip;

    /**
     * @return Specify the IP the server should get in the network
     * 
     */
    public Optional<Output<String>> ip() {
        return Optional.ofNullable(this.ip);
    }

    /**
     * (Optional, string) The MAC address the private interface of the server has
     * 
     */
    @Import(name="macAddress")
    private @Nullable Output<String> macAddress;

    /**
     * @return (Optional, string) The MAC address the private interface of the server has
     * 
     */
    public Optional<Output<String>> macAddress() {
        return Optional.ofNullable(this.macAddress);
    }

    /**
     * ID of the network
     * 
     */
    @Import(name="networkId", required=true)
    private Output<Integer> networkId;

    /**
     * @return ID of the network
     * 
     */
    public Output<Integer> networkId() {
        return this.networkId;
    }

    private ServerNetworkArgs() {}

    private ServerNetworkArgs(ServerNetworkArgs $) {
        this.aliasIps = $.aliasIps;
        this.ip = $.ip;
        this.macAddress = $.macAddress;
        this.networkId = $.networkId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServerNetworkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServerNetworkArgs $;

        public Builder() {
            $ = new ServerNetworkArgs();
        }

        public Builder(ServerNetworkArgs defaults) {
            $ = new ServerNetworkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aliasIps Alias IPs the server should have in the Network.
         * 
         * @return builder
         * 
         */
        public Builder aliasIps(@Nullable Output<List<String>> aliasIps) {
            $.aliasIps = aliasIps;
            return this;
        }

        /**
         * @param aliasIps Alias IPs the server should have in the Network.
         * 
         * @return builder
         * 
         */
        public Builder aliasIps(List<String> aliasIps) {
            return aliasIps(Output.of(aliasIps));
        }

        /**
         * @param aliasIps Alias IPs the server should have in the Network.
         * 
         * @return builder
         * 
         */
        public Builder aliasIps(String... aliasIps) {
            return aliasIps(List.of(aliasIps));
        }

        /**
         * @param ip Specify the IP the server should get in the network
         * 
         * @return builder
         * 
         */
        public Builder ip(@Nullable Output<String> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip Specify the IP the server should get in the network
         * 
         * @return builder
         * 
         */
        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        /**
         * @param macAddress (Optional, string) The MAC address the private interface of the server has
         * 
         * @return builder
         * 
         */
        public Builder macAddress(@Nullable Output<String> macAddress) {
            $.macAddress = macAddress;
            return this;
        }

        /**
         * @param macAddress (Optional, string) The MAC address the private interface of the server has
         * 
         * @return builder
         * 
         */
        public Builder macAddress(String macAddress) {
            return macAddress(Output.of(macAddress));
        }

        /**
         * @param networkId ID of the network
         * 
         * @return builder
         * 
         */
        public Builder networkId(Output<Integer> networkId) {
            $.networkId = networkId;
            return this;
        }

        /**
         * @param networkId ID of the network
         * 
         * @return builder
         * 
         */
        public Builder networkId(Integer networkId) {
            return networkId(Output.of(networkId));
        }

        public ServerNetworkArgs build() {
            $.networkId = Objects.requireNonNull($.networkId, "expected parameter 'networkId' to be non-null");
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.hcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class NetworkRouteArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkRouteArgs Empty = new NetworkRouteArgs();

    /**
     * Destination network or host of this route. Must be a subnet of the ip_range of the Network. Must not overlap with an existing ip_range in any subnets or with any destinations in other routes or with the first ip of the networks ip_range or with 172.31.1.1.
     * 
     */
    @Import(name="destination", required=true)
    private Output<String> destination;

    /**
     * @return Destination network or host of this route. Must be a subnet of the ip_range of the Network. Must not overlap with an existing ip_range in any subnets or with any destinations in other routes or with the first ip of the networks ip_range or with 172.31.1.1.
     * 
     */
    public Output<String> destination() {
        return this.destination;
    }

    /**
     * Gateway for the route. Cannot be the first ip of the networks ip_range and also cannot be 172.31.1.1 as this IP is being used as a gateway for the public network interface of servers.
     * 
     */
    @Import(name="gateway", required=true)
    private Output<String> gateway;

    /**
     * @return Gateway for the route. Cannot be the first ip of the networks ip_range and also cannot be 172.31.1.1 as this IP is being used as a gateway for the public network interface of servers.
     * 
     */
    public Output<String> gateway() {
        return this.gateway;
    }

    /**
     * ID of the Network the route should be added to.
     * 
     */
    @Import(name="networkId", required=true)
    private Output<Integer> networkId;

    /**
     * @return ID of the Network the route should be added to.
     * 
     */
    public Output<Integer> networkId() {
        return this.networkId;
    }

    private NetworkRouteArgs() {}

    private NetworkRouteArgs(NetworkRouteArgs $) {
        this.destination = $.destination;
        this.gateway = $.gateway;
        this.networkId = $.networkId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkRouteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkRouteArgs $;

        public Builder() {
            $ = new NetworkRouteArgs();
        }

        public Builder(NetworkRouteArgs defaults) {
            $ = new NetworkRouteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param destination Destination network or host of this route. Must be a subnet of the ip_range of the Network. Must not overlap with an existing ip_range in any subnets or with any destinations in other routes or with the first ip of the networks ip_range or with 172.31.1.1.
         * 
         * @return builder
         * 
         */
        public Builder destination(Output<String> destination) {
            $.destination = destination;
            return this;
        }

        /**
         * @param destination Destination network or host of this route. Must be a subnet of the ip_range of the Network. Must not overlap with an existing ip_range in any subnets or with any destinations in other routes or with the first ip of the networks ip_range or with 172.31.1.1.
         * 
         * @return builder
         * 
         */
        public Builder destination(String destination) {
            return destination(Output.of(destination));
        }

        /**
         * @param gateway Gateway for the route. Cannot be the first ip of the networks ip_range and also cannot be 172.31.1.1 as this IP is being used as a gateway for the public network interface of servers.
         * 
         * @return builder
         * 
         */
        public Builder gateway(Output<String> gateway) {
            $.gateway = gateway;
            return this;
        }

        /**
         * @param gateway Gateway for the route. Cannot be the first ip of the networks ip_range and also cannot be 172.31.1.1 as this IP is being used as a gateway for the public network interface of servers.
         * 
         * @return builder
         * 
         */
        public Builder gateway(String gateway) {
            return gateway(Output.of(gateway));
        }

        /**
         * @param networkId ID of the Network the route should be added to.
         * 
         * @return builder
         * 
         */
        public Builder networkId(Output<Integer> networkId) {
            $.networkId = networkId;
            return this;
        }

        /**
         * @param networkId ID of the Network the route should be added to.
         * 
         * @return builder
         * 
         */
        public Builder networkId(Integer networkId) {
            return networkId(Output.of(networkId));
        }

        public NetworkRouteArgs build() {
            if ($.destination == null) {
                throw new MissingRequiredPropertyException("NetworkRouteArgs", "destination");
            }
            if ($.gateway == null) {
                throw new MissingRequiredPropertyException("NetworkRouteArgs", "gateway");
            }
            if ($.networkId == null) {
                throw new MissingRequiredPropertyException("NetworkRouteArgs", "networkId");
            }
            return $;
        }
    }

}

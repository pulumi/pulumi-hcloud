// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.hcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetLoadBalancersLoadBalancerServiceHttp {
    private List<String> certificates;
    private Integer cookieLifetime;
    private String cookieName;
    private Boolean redirectHttp;
    private Boolean stickySessions;

    private GetLoadBalancersLoadBalancerServiceHttp() {}
    public List<String> certificates() {
        return this.certificates;
    }
    public Integer cookieLifetime() {
        return this.cookieLifetime;
    }
    public String cookieName() {
        return this.cookieName;
    }
    public Boolean redirectHttp() {
        return this.redirectHttp;
    }
    public Boolean stickySessions() {
        return this.stickySessions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLoadBalancersLoadBalancerServiceHttp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> certificates;
        private Integer cookieLifetime;
        private String cookieName;
        private Boolean redirectHttp;
        private Boolean stickySessions;
        public Builder() {}
        public Builder(GetLoadBalancersLoadBalancerServiceHttp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificates = defaults.certificates;
    	      this.cookieLifetime = defaults.cookieLifetime;
    	      this.cookieName = defaults.cookieName;
    	      this.redirectHttp = defaults.redirectHttp;
    	      this.stickySessions = defaults.stickySessions;
        }

        @CustomType.Setter
        public Builder certificates(List<String> certificates) {
            if (certificates == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancersLoadBalancerServiceHttp", "certificates");
            }
            this.certificates = certificates;
            return this;
        }
        public Builder certificates(String... certificates) {
            return certificates(List.of(certificates));
        }
        @CustomType.Setter
        public Builder cookieLifetime(Integer cookieLifetime) {
            if (cookieLifetime == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancersLoadBalancerServiceHttp", "cookieLifetime");
            }
            this.cookieLifetime = cookieLifetime;
            return this;
        }
        @CustomType.Setter
        public Builder cookieName(String cookieName) {
            if (cookieName == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancersLoadBalancerServiceHttp", "cookieName");
            }
            this.cookieName = cookieName;
            return this;
        }
        @CustomType.Setter
        public Builder redirectHttp(Boolean redirectHttp) {
            if (redirectHttp == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancersLoadBalancerServiceHttp", "redirectHttp");
            }
            this.redirectHttp = redirectHttp;
            return this;
        }
        @CustomType.Setter
        public Builder stickySessions(Boolean stickySessions) {
            if (stickySessions == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancersLoadBalancerServiceHttp", "stickySessions");
            }
            this.stickySessions = stickySessions;
            return this;
        }
        public GetLoadBalancersLoadBalancerServiceHttp build() {
            final var _resultValue = new GetLoadBalancersLoadBalancerServiceHttp();
            _resultValue.certificates = certificates;
            _resultValue.cookieLifetime = cookieLifetime;
            _resultValue.cookieName = cookieName;
            _resultValue.redirectHttp = redirectHttp;
            _resultValue.stickySessions = stickySessions;
            return _resultValue;
        }
    }
}

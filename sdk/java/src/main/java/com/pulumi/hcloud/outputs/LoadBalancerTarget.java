// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.hcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LoadBalancerTarget {
    private @Nullable Integer serverId;
    /**
     * @return (string) Type of the Load Balancer Algorithm. `roundRobin` or `leastConnections`
     * 
     */
    private String type;
    /**
     * @deprecated
     * Does not work. Use the hcloud.LoadBalancerTarget resource instead.
     * 
     */
    @Deprecated /* Does not work. Use the hcloud.LoadBalancerTarget resource instead. */
    private @Nullable Boolean usePrivateIp;

    private LoadBalancerTarget() {}
    public Optional<Integer> serverId() {
        return Optional.ofNullable(this.serverId);
    }
    /**
     * @return (string) Type of the Load Balancer Algorithm. `roundRobin` or `leastConnections`
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @deprecated
     * Does not work. Use the hcloud.LoadBalancerTarget resource instead.
     * 
     */
    @Deprecated /* Does not work. Use the hcloud.LoadBalancerTarget resource instead. */
    public Optional<Boolean> usePrivateIp() {
        return Optional.ofNullable(this.usePrivateIp);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LoadBalancerTarget defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer serverId;
        private String type;
        private @Nullable Boolean usePrivateIp;
        public Builder() {}
        public Builder(LoadBalancerTarget defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.serverId = defaults.serverId;
    	      this.type = defaults.type;
    	      this.usePrivateIp = defaults.usePrivateIp;
        }

        @CustomType.Setter
        public Builder serverId(@Nullable Integer serverId) {

            this.serverId = serverId;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("LoadBalancerTarget", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder usePrivateIp(@Nullable Boolean usePrivateIp) {

            this.usePrivateIp = usePrivateIp;
            return this;
        }
        public LoadBalancerTarget build() {
            final var _resultValue = new LoadBalancerTarget();
            _resultValue.serverId = serverId;
            _resultValue.type = type;
            _resultValue.usePrivateIp = usePrivateIp;
            return _resultValue;
        }
    }
}

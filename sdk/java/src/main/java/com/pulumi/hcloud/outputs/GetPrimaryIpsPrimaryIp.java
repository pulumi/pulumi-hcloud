// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.hcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPrimaryIpsPrimaryIp {
    private Integer assigneeId;
    private String assigneeType;
    private Boolean autoDelete;
    private String datacenter;
    private Boolean deleteProtection;
    private Integer id;
    private String ipAddress;
    private String ipNetwork;
    private Map<String,String> labels;
    private @Nullable String name;
    private String type;

    private GetPrimaryIpsPrimaryIp() {}
    public Integer assigneeId() {
        return this.assigneeId;
    }
    public String assigneeType() {
        return this.assigneeType;
    }
    public Boolean autoDelete() {
        return this.autoDelete;
    }
    public String datacenter() {
        return this.datacenter;
    }
    public Boolean deleteProtection() {
        return this.deleteProtection;
    }
    public Integer id() {
        return this.id;
    }
    public String ipAddress() {
        return this.ipAddress;
    }
    public String ipNetwork() {
        return this.ipNetwork;
    }
    public Map<String,String> labels() {
        return this.labels;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPrimaryIpsPrimaryIp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer assigneeId;
        private String assigneeType;
        private Boolean autoDelete;
        private String datacenter;
        private Boolean deleteProtection;
        private Integer id;
        private String ipAddress;
        private String ipNetwork;
        private Map<String,String> labels;
        private @Nullable String name;
        private String type;
        public Builder() {}
        public Builder(GetPrimaryIpsPrimaryIp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assigneeId = defaults.assigneeId;
    	      this.assigneeType = defaults.assigneeType;
    	      this.autoDelete = defaults.autoDelete;
    	      this.datacenter = defaults.datacenter;
    	      this.deleteProtection = defaults.deleteProtection;
    	      this.id = defaults.id;
    	      this.ipAddress = defaults.ipAddress;
    	      this.ipNetwork = defaults.ipNetwork;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder assigneeId(Integer assigneeId) {
            if (assigneeId == null) {
              throw new MissingRequiredPropertyException("GetPrimaryIpsPrimaryIp", "assigneeId");
            }
            this.assigneeId = assigneeId;
            return this;
        }
        @CustomType.Setter
        public Builder assigneeType(String assigneeType) {
            if (assigneeType == null) {
              throw new MissingRequiredPropertyException("GetPrimaryIpsPrimaryIp", "assigneeType");
            }
            this.assigneeType = assigneeType;
            return this;
        }
        @CustomType.Setter
        public Builder autoDelete(Boolean autoDelete) {
            if (autoDelete == null) {
              throw new MissingRequiredPropertyException("GetPrimaryIpsPrimaryIp", "autoDelete");
            }
            this.autoDelete = autoDelete;
            return this;
        }
        @CustomType.Setter
        public Builder datacenter(String datacenter) {
            if (datacenter == null) {
              throw new MissingRequiredPropertyException("GetPrimaryIpsPrimaryIp", "datacenter");
            }
            this.datacenter = datacenter;
            return this;
        }
        @CustomType.Setter
        public Builder deleteProtection(Boolean deleteProtection) {
            if (deleteProtection == null) {
              throw new MissingRequiredPropertyException("GetPrimaryIpsPrimaryIp", "deleteProtection");
            }
            this.deleteProtection = deleteProtection;
            return this;
        }
        @CustomType.Setter
        public Builder id(Integer id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPrimaryIpsPrimaryIp", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(String ipAddress) {
            if (ipAddress == null) {
              throw new MissingRequiredPropertyException("GetPrimaryIpsPrimaryIp", "ipAddress");
            }
            this.ipAddress = ipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder ipNetwork(String ipNetwork) {
            if (ipNetwork == null) {
              throw new MissingRequiredPropertyException("GetPrimaryIpsPrimaryIp", "ipNetwork");
            }
            this.ipNetwork = ipNetwork;
            return this;
        }
        @CustomType.Setter
        public Builder labels(Map<String,String> labels) {
            if (labels == null) {
              throw new MissingRequiredPropertyException("GetPrimaryIpsPrimaryIp", "labels");
            }
            this.labels = labels;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetPrimaryIpsPrimaryIp", "type");
            }
            this.type = type;
            return this;
        }
        public GetPrimaryIpsPrimaryIp build() {
            final var _resultValue = new GetPrimaryIpsPrimaryIp();
            _resultValue.assigneeId = assigneeId;
            _resultValue.assigneeType = assigneeType;
            _resultValue.autoDelete = autoDelete;
            _resultValue.datacenter = datacenter;
            _resultValue.deleteProtection = deleteProtection;
            _resultValue.id = id;
            _resultValue.ipAddress = ipAddress;
            _resultValue.ipNetwork = ipNetwork;
            _resultValue.labels = labels;
            _resultValue.name = name;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.hcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.hcloud.outputs.GetFirewallsFirewallApplyTo;
import com.pulumi.hcloud.outputs.GetFirewallsFirewallRule;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFirewallsFirewall {
    private @Nullable List<GetFirewallsFirewallApplyTo> applyTos;
    private @Nullable Integer id;
    private @Nullable Map<String,String> labels;
    private String name;
    private @Nullable List<GetFirewallsFirewallRule> rules;

    private GetFirewallsFirewall() {}
    public List<GetFirewallsFirewallApplyTo> applyTos() {
        return this.applyTos == null ? List.of() : this.applyTos;
    }
    public Optional<Integer> id() {
        return Optional.ofNullable(this.id);
    }
    public Map<String,String> labels() {
        return this.labels == null ? Map.of() : this.labels;
    }
    public String name() {
        return this.name;
    }
    public List<GetFirewallsFirewallRule> rules() {
        return this.rules == null ? List.of() : this.rules;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFirewallsFirewall defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetFirewallsFirewallApplyTo> applyTos;
        private @Nullable Integer id;
        private @Nullable Map<String,String> labels;
        private String name;
        private @Nullable List<GetFirewallsFirewallRule> rules;
        public Builder() {}
        public Builder(GetFirewallsFirewall defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applyTos = defaults.applyTos;
    	      this.id = defaults.id;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.rules = defaults.rules;
        }

        @CustomType.Setter
        public Builder applyTos(@Nullable List<GetFirewallsFirewallApplyTo> applyTos) {

            this.applyTos = applyTos;
            return this;
        }
        public Builder applyTos(GetFirewallsFirewallApplyTo... applyTos) {
            return applyTos(List.of(applyTos));
        }
        @CustomType.Setter
        public Builder id(@Nullable Integer id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder labels(@Nullable Map<String,String> labels) {

            this.labels = labels;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetFirewallsFirewall", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder rules(@Nullable List<GetFirewallsFirewallRule> rules) {

            this.rules = rules;
            return this;
        }
        public Builder rules(GetFirewallsFirewallRule... rules) {
            return rules(List.of(rules));
        }
        public GetFirewallsFirewall build() {
            final var _resultValue = new GetFirewallsFirewall();
            _resultValue.applyTos = applyTos;
            _resultValue.id = id;
            _resultValue.labels = labels;
            _resultValue.name = name;
            _resultValue.rules = rules;
            return _resultValue;
        }
    }
}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.hcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.hcloud.outputs.GetServerTypesServerType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetServerTypesResult {
    /**
     * @deprecated
     * Use server_types list instead
     * 
     */
    @Deprecated /* Use server_types list instead */
    private @Nullable List<String> descriptions;
    private @Nullable String id;
    /**
     * @deprecated
     * Use server_types list instead
     * 
     */
    @Deprecated /* Use server_types list instead */
    private @Nullable List<String> names;
    /**
     * @deprecated
     * Use server_types list instead
     * 
     */
    @Deprecated /* Use server_types list instead */
    private @Nullable List<String> serverTypeIds;
    /**
     * @return (list) List of all server types. See `data.hcloud_server_type` for schema.
     * 
     */
    private List<GetServerTypesServerType> serverTypes;

    private GetServerTypesResult() {}
    /**
     * @deprecated
     * Use server_types list instead
     * 
     */
    @Deprecated /* Use server_types list instead */
    public List<String> descriptions() {
        return this.descriptions == null ? List.of() : this.descriptions;
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @deprecated
     * Use server_types list instead
     * 
     */
    @Deprecated /* Use server_types list instead */
    public List<String> names() {
        return this.names == null ? List.of() : this.names;
    }
    /**
     * @deprecated
     * Use server_types list instead
     * 
     */
    @Deprecated /* Use server_types list instead */
    public List<String> serverTypeIds() {
        return this.serverTypeIds == null ? List.of() : this.serverTypeIds;
    }
    /**
     * @return (list) List of all server types. See `data.hcloud_server_type` for schema.
     * 
     */
    public List<GetServerTypesServerType> serverTypes() {
        return this.serverTypes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServerTypesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> descriptions;
        private @Nullable String id;
        private @Nullable List<String> names;
        private @Nullable List<String> serverTypeIds;
        private List<GetServerTypesServerType> serverTypes;
        public Builder() {}
        public Builder(GetServerTypesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.descriptions = defaults.descriptions;
    	      this.id = defaults.id;
    	      this.names = defaults.names;
    	      this.serverTypeIds = defaults.serverTypeIds;
    	      this.serverTypes = defaults.serverTypes;
        }

        @CustomType.Setter
        public Builder descriptions(@Nullable List<String> descriptions) {

            this.descriptions = descriptions;
            return this;
        }
        public Builder descriptions(String... descriptions) {
            return descriptions(List.of(descriptions));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder names(@Nullable List<String> names) {

            this.names = names;
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        @CustomType.Setter
        public Builder serverTypeIds(@Nullable List<String> serverTypeIds) {

            this.serverTypeIds = serverTypeIds;
            return this;
        }
        public Builder serverTypeIds(String... serverTypeIds) {
            return serverTypeIds(List.of(serverTypeIds));
        }
        @CustomType.Setter
        public Builder serverTypes(List<GetServerTypesServerType> serverTypes) {
            if (serverTypes == null) {
              throw new MissingRequiredPropertyException("GetServerTypesResult", "serverTypes");
            }
            this.serverTypes = serverTypes;
            return this;
        }
        public Builder serverTypes(GetServerTypesServerType... serverTypes) {
            return serverTypes(List.of(serverTypes));
        }
        public GetServerTypesResult build() {
            final var _resultValue = new GetServerTypesResult();
            _resultValue.descriptions = descriptions;
            _resultValue.id = id;
            _resultValue.names = names;
            _resultValue.serverTypeIds = serverTypeIds;
            _resultValue.serverTypes = serverTypes;
            return _resultValue;
        }
    }
}

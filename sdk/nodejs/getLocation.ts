// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides details about a specific Hetzner Cloud Location.
 * Use this resource to get detailed information about specific location.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as hcloud from "@pulumi/hcloud";
 *
 * const l1 = pulumi.output(hcloud.getLocation({
 *     name: "fsn1",
 * }));
 * const l2 = pulumi.output(hcloud.getLocation({
 *     id: 1,
 * }));
 * ```
 */
export function getLocation(args?: GetLocationArgs, opts?: pulumi.InvokeOptions): Promise<GetLocationResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("hcloud:index/getLocation:getLocation", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getLocation.
 */
export interface GetLocationArgs {
    /**
     * ID of the location.
     */
    id?: number;
    /**
     * Name of the location.
     */
    name?: string;
}

/**
 * A collection of values returned by getLocation.
 */
export interface GetLocationResult {
    /**
     * (string) City of the location.
     */
    readonly city: string;
    /**
     * (string) Country of the location.
     */
    readonly country: string;
    /**
     * (string) Description of the location.
     */
    readonly description: string;
    /**
     * (int) Unique ID of the location.
     */
    readonly id: number;
    /**
     * (float) Latitude of the city.
     */
    readonly latitude: number;
    /**
     * (float) Longitude of the city.
     */
    readonly longitude: number;
    /**
     * (string) Name of the location.
     */
    readonly name: string;
}

export function getLocationOutput(args?: GetLocationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLocationResult> {
    return pulumi.output(args).apply(a => getLocation(a, opts))
}

/**
 * A collection of arguments for invoking getLocation.
 */
export interface GetLocationOutputArgs {
    /**
     * ID of the location.
     */
    id?: pulumi.Input<number>;
    /**
     * Name of the location.
     */
    name?: pulumi.Input<string>;
}

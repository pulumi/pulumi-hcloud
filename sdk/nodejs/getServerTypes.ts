// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Provides a list of available Hetzner Cloud Server Types.
 */
export function getServerTypes(args?: GetServerTypesArgs, opts?: pulumi.InvokeOptions): Promise<GetServerTypesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("hcloud:index/getServerTypes:getServerTypes", {
        "serverTypeIds": args.serverTypeIds,
    }, opts);
}

/**
 * A collection of arguments for invoking getServerTypes.
 */
export interface GetServerTypesArgs {
    /**
     * @deprecated Use server_types list instead
     */
    serverTypeIds?: string[];
}

/**
 * A collection of values returned by getServerTypes.
 */
export interface GetServerTypesResult {
    /**
     * @deprecated Use server_types list instead
     */
    readonly descriptions: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * @deprecated Use server_types list instead
     */
    readonly names: string[];
    /**
     * @deprecated Use server_types list instead
     */
    readonly serverTypeIds?: string[];
    /**
     * (list) List of all server types. See `data.hcloud_type` for schema.
     */
    readonly serverTypes: outputs.GetServerTypesServerType[];
}

export function getServerTypesOutput(args?: GetServerTypesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServerTypesResult> {
    return pulumi.output(args).apply(a => getServerTypes(a, opts))
}

/**
 * A collection of arguments for invoking getServerTypes.
 */
export interface GetServerTypesOutputArgs {
    /**
     * @deprecated Use server_types list instead
     */
    serverTypeIds?: pulumi.Input<pulumi.Input<string>[]>;
}

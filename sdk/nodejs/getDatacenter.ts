// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides details about a specific Hetzner Cloud Datacenter.
 * Use this resource to get detailed information about specific datacenter.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as hcloud from "@pulumi/hcloud";
 *
 * const ds1 = pulumi.output(hcloud.getDatacenter({
 *     name: "fsn1-dc8",
 * }));
 * const ds2 = pulumi.output(hcloud.getDatacenter({
 *     id: 4,
 * }));
 * ```
 */
export function getDatacenter(args?: GetDatacenterArgs, opts?: pulumi.InvokeOptions): Promise<GetDatacenterResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("hcloud:index/getDatacenter:getDatacenter", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getDatacenter.
 */
export interface GetDatacenterArgs {
    /**
     * ID of the datacenter.
     */
    id?: number;
    /**
     * Name of the datacenter.
     */
    name?: string;
}

/**
 * A collection of values returned by getDatacenter.
 */
export interface GetDatacenterResult {
    /**
     * (list) List of available server types.
     */
    readonly availableServerTypeIds: number[];
    /**
     * (string) Description of the datacenter.
     */
    readonly description: string;
    /**
     * (int) Unique ID of the datacenter.
     */
    readonly id: number;
    /**
     * (map) Physical datacenter location.
     */
    readonly location: {[key: string]: any};
    /**
     * (string) Name of the datacenter.
     */
    readonly name: string;
    /**
     * (list) List of server types supported by the datacenter.
     */
    readonly supportedServerTypeIds: number[];
}

export function getDatacenterOutput(args?: GetDatacenterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatacenterResult> {
    return pulumi.output(args).apply(a => getDatacenter(a, opts))
}

/**
 * A collection of arguments for invoking getDatacenter.
 */
export interface GetDatacenterOutputArgs {
    /**
     * ID of the datacenter.
     */
    id?: pulumi.Input<number>;
    /**
     * Name of the datacenter.
     */
    name?: pulumi.Input<string>;
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides details about a specific Hetzner Cloud Load Balancer Type.
 * Use this resource to get detailed information about specific Load Balancer Type.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as hcloud from "@pulumi/hcloud";
 *
 * const byName = hcloud.getLoadBalancerType({
 *     name: "cx22",
 * });
 * const byId = hcloud.getLoadBalancerType({
 *     id: 1,
 * });
 * const loadBalancer = new hcloud.LoadBalancer("load_balancer", {
 *     name: "my-load-balancer",
 *     loadBalancerType: name,
 *     location: "nbg1",
 * });
 * ```
 */
export function getLoadBalancerType(args?: GetLoadBalancerTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetLoadBalancerTypeResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("hcloud:index/getLoadBalancerType:getLoadBalancerType", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getLoadBalancerType.
 */
export interface GetLoadBalancerTypeArgs {
    /**
     * ID of the load_balancer_type.
     */
    id?: number;
    /**
     * Name of the load_balancer_type.
     */
    name?: string;
}

/**
 * A collection of values returned by getLoadBalancerType.
 */
export interface GetLoadBalancerTypeResult {
    /**
     * (string) Description of the load_balancer_type.
     */
    readonly description: string;
    /**
     * (int) Unique ID of the load_balancer_type.
     */
    readonly id: number;
    /**
     * (int) Maximum number of SSL Certificates that can be assigned to the Load Balancer of this type.
     */
    readonly maxAssignedCertificates: number;
    /**
     * (int) Maximum number of simultaneous open connections for the Load Balancer of this type.
     */
    readonly maxConnections: number;
    /**
     * (int) Maximum number of services for the Load Balancer of this type.
     */
    readonly maxServices: number;
    /**
     * (int) Maximum number of targets for the Load Balancer of this type.
     */
    readonly maxTargets: number;
    /**
     * (string) Name of the load_balancer_type.
     */
    readonly name: string;
}
/**
 * Provides details about a specific Hetzner Cloud Load Balancer Type.
 * Use this resource to get detailed information about specific Load Balancer Type.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as hcloud from "@pulumi/hcloud";
 *
 * const byName = hcloud.getLoadBalancerType({
 *     name: "cx22",
 * });
 * const byId = hcloud.getLoadBalancerType({
 *     id: 1,
 * });
 * const loadBalancer = new hcloud.LoadBalancer("load_balancer", {
 *     name: "my-load-balancer",
 *     loadBalancerType: name,
 *     location: "nbg1",
 * });
 * ```
 */
export function getLoadBalancerTypeOutput(args?: GetLoadBalancerTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLoadBalancerTypeResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("hcloud:index/getLoadBalancerType:getLoadBalancerType", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getLoadBalancerType.
 */
export interface GetLoadBalancerTypeOutputArgs {
    /**
     * ID of the load_balancer_type.
     */
    id?: pulumi.Input<number>;
    /**
     * Name of the load_balancer_type.
     */
    name?: pulumi.Input<string>;
}

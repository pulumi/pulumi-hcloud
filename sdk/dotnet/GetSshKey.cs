// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.HCloud
{
    public static class GetSshKey
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using HCloud = Pulumi.HCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var byId = HCloud.GetSshKey.Invoke(new()
        ///     {
        ///         Id = 24332897,
        ///     });
        /// 
        ///     var byName = HCloud.GetSshKey.Invoke(new()
        ///     {
        ///         Name = "my-ssh-key",
        ///     });
        /// 
        ///     var byFingerprint = HCloud.GetSshKey.Invoke(new()
        ///     {
        ///         Fingerprint = "55:58:dc:bd:61:6e:7d:24:07:a7:7d:9b:be:99:83:a8",
        ///     });
        /// 
        ///     var byLabel = HCloud.GetSshKey.Invoke(new()
        ///     {
        ///         WithSelector = "key=value",
        ///     });
        /// 
        ///     var main = new HCloud.Server("main", new()
        ///     {
        ///         SshKeys = new[]
        ///         {
        ///             byId.Apply(getSshKeyResult =&gt; getSshKeyResult.Id),
        ///             byName.Apply(getSshKeyResult =&gt; getSshKeyResult.Id),
        ///             byFingerprint.Apply(getSshKeyResult =&gt; getSshKeyResult.Id),
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSshKeyResult> InvokeAsync(GetSshKeyArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSshKeyResult>("hcloud:index/getSshKey:getSshKey", args ?? new GetSshKeyArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using HCloud = Pulumi.HCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var byId = HCloud.GetSshKey.Invoke(new()
        ///     {
        ///         Id = 24332897,
        ///     });
        /// 
        ///     var byName = HCloud.GetSshKey.Invoke(new()
        ///     {
        ///         Name = "my-ssh-key",
        ///     });
        /// 
        ///     var byFingerprint = HCloud.GetSshKey.Invoke(new()
        ///     {
        ///         Fingerprint = "55:58:dc:bd:61:6e:7d:24:07:a7:7d:9b:be:99:83:a8",
        ///     });
        /// 
        ///     var byLabel = HCloud.GetSshKey.Invoke(new()
        ///     {
        ///         WithSelector = "key=value",
        ///     });
        /// 
        ///     var main = new HCloud.Server("main", new()
        ///     {
        ///         SshKeys = new[]
        ///         {
        ///             byId.Apply(getSshKeyResult =&gt; getSshKeyResult.Id),
        ///             byName.Apply(getSshKeyResult =&gt; getSshKeyResult.Id),
        ///             byFingerprint.Apply(getSshKeyResult =&gt; getSshKeyResult.Id),
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSshKeyResult> Invoke(GetSshKeyInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSshKeyResult>("hcloud:index/getSshKey:getSshKey", args ?? new GetSshKeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSshKeyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Fingerprint of the SSH Key.
        /// </summary>
        [Input("fingerprint")]
        public string? Fingerprint { get; set; }

        /// <summary>
        /// ID of the SSH Key.
        /// </summary>
        [Input("id")]
        public int? Id { get; set; }

        /// <summary>
        /// Name of the SSH Key.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Filter results using a [Label Selector](https://docs.hetzner.cloud/#label-selector).
        /// </summary>
        [Input("selector")]
        public string? Selector { get; set; }

        /// <summary>
        /// Filter results using a [Label Selector](https://docs.hetzner.cloud/#label-selector).
        /// </summary>
        [Input("withSelector")]
        public string? WithSelector { get; set; }

        public GetSshKeyArgs()
        {
        }
        public static new GetSshKeyArgs Empty => new GetSshKeyArgs();
    }

    public sealed class GetSshKeyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Fingerprint of the SSH Key.
        /// </summary>
        [Input("fingerprint")]
        public Input<string>? Fingerprint { get; set; }

        /// <summary>
        /// ID of the SSH Key.
        /// </summary>
        [Input("id")]
        public Input<int>? Id { get; set; }

        /// <summary>
        /// Name of the SSH Key.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Filter results using a [Label Selector](https://docs.hetzner.cloud/#label-selector).
        /// </summary>
        [Input("selector")]
        public Input<string>? Selector { get; set; }

        /// <summary>
        /// Filter results using a [Label Selector](https://docs.hetzner.cloud/#label-selector).
        /// </summary>
        [Input("withSelector")]
        public Input<string>? WithSelector { get; set; }

        public GetSshKeyInvokeArgs()
        {
        }
        public static new GetSshKeyInvokeArgs Empty => new GetSshKeyInvokeArgs();
    }


    [OutputType]
    public sealed class GetSshKeyResult
    {
        /// <summary>
        /// Fingerprint of the SSH Key.
        /// </summary>
        public readonly string? Fingerprint;
        /// <summary>
        /// ID of the SSH Key.
        /// </summary>
        public readonly int? Id;
        /// <summary>
        /// User-defined [labels](https://docs.hetzner.cloud/#labels) (key-value pairs) for the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Name of the SSH Key.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Public key of the SSH Key pair.
        /// </summary>
        public readonly string PublicKey;
        /// <summary>
        /// Filter results using a [Label Selector](https://docs.hetzner.cloud/#label-selector).
        /// </summary>
        public readonly string? Selector;
        /// <summary>
        /// Filter results using a [Label Selector](https://docs.hetzner.cloud/#label-selector).
        /// </summary>
        public readonly string? WithSelector;

        [OutputConstructor]
        private GetSshKeyResult(
            string? fingerprint,

            int? id,

            ImmutableDictionary<string, string> labels,

            string? name,

            string publicKey,

            string? selector,

            string? withSelector)
        {
            Fingerprint = fingerprint;
            Id = id;
            Labels = labels;
            Name = name;
            PublicKey = publicKey;
            Selector = selector;
            WithSelector = withSelector;
        }
    }
}

// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.HCloud.Outputs
{

    [OutputType]
    public sealed class GetServerTypesServerTypeResult
    {
        /// <summary>
        /// Architecture of the cpu for a Server of this type.
        /// </summary>
        public readonly string Architecture;
        /// <summary>
        /// Category of the Server Type.
        /// </summary>
        public readonly string Category;
        /// <summary>
        /// Number of cpu cores for a Server of this type.
        /// </summary>
        public readonly int Cores;
        /// <summary>
        /// Type of cpu for a Server of this type.
        /// </summary>
        public readonly string CpuType;
        /// <summary>
        /// Date of the Server Type deprecation announcement.
        /// </summary>
        public readonly string DeprecationAnnounced;
        /// <summary>
        /// Description of the Server Type.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Disk size in GB for a Server of this type.
        /// </summary>
        public readonly int Disk;
        /// <summary>
        /// ID of the Server Type.
        /// </summary>
        public readonly int Id;
        public readonly int IncludedTraffic;
        /// <summary>
        /// Whether the Server Type is deprecated.
        /// </summary>
        public readonly bool IsDeprecated;
        /// <summary>
        /// List of supported Locations for this Server Type.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServerTypesServerTypeLocationResult> Locations;
        /// <summary>
        /// Memory in GB for a Server of this type.
        /// </summary>
        public readonly int Memory;
        /// <summary>
        /// Name of the Server Type.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Type of boot drive for a Server of this type.
        /// </summary>
        public readonly string StorageType;
        /// <summary>
        /// Date of the Server Type removal. After this date, the Server Type cannot be used anymore.
        /// </summary>
        public readonly string UnavailableAfter;

        [OutputConstructor]
        private GetServerTypesServerTypeResult(
            string architecture,

            string category,

            int cores,

            string cpuType,

            string deprecationAnnounced,

            string description,

            int disk,

            int id,

            int includedTraffic,

            bool isDeprecated,

            ImmutableArray<Outputs.GetServerTypesServerTypeLocationResult> locations,

            int memory,

            string name,

            string storageType,

            string unavailableAfter)
        {
            Architecture = architecture;
            Category = category;
            Cores = cores;
            CpuType = cpuType;
            DeprecationAnnounced = deprecationAnnounced;
            Description = description;
            Disk = disk;
            Id = id;
            IncludedTraffic = includedTraffic;
            IsDeprecated = isDeprecated;
            Locations = locations;
            Memory = memory;
            Name = name;
            StorageType = storageType;
            UnavailableAfter = unavailableAfter;
        }
    }
}

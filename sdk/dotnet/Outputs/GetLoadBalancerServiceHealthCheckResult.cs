// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.HCloud.Outputs
{

    [OutputType]
    public sealed class GetLoadBalancerServiceHealthCheckResult
    {
        /// <summary>
        /// (list) List of http configurations when `protocol` is `http` or `https`.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLoadBalancerServiceHealthCheckHttpResult> Https;
        /// <summary>
        /// (int) Interval how often the health check will be performed, in seconds.
        /// </summary>
        public readonly int Interval;
        /// <summary>
        /// (int) Port the health check tries to connect to. Can be everything between `1` and `65535`.
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// (string) Protocol the health check uses. `http`, `https` or `tcp`
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// (int) Number of tries a health check will be performed until a target will be listed as `unhealthy`.
        /// </summary>
        public readonly int Retries;
        /// <summary>
        /// (int) Timeout when a health check try will be canceled if there is no response, in seconds.
        /// </summary>
        public readonly int Timeout;

        [OutputConstructor]
        private GetLoadBalancerServiceHealthCheckResult(
            ImmutableArray<Outputs.GetLoadBalancerServiceHealthCheckHttpResult> https,

            int interval,

            int port,

            string protocol,

            int retries,

            int timeout)
        {
            Https = https;
            Interval = interval;
            Port = port;
            Protocol = protocol;
            Retries = retries;
            Timeout = timeout;
        }
    }
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.HCloud.Outputs
{

    [OutputType]
    public sealed class GetLoadBalancersLoadBalancerResult
    {
        public readonly ImmutableArray<Outputs.GetLoadBalancersLoadBalancerAlgorithmResult> Algorithms;
        public readonly bool DeleteProtection;
        public readonly int Id;
        public readonly string Ipv4;
        public readonly string Ipv6;
        public readonly ImmutableDictionary<string, string> Labels;
        public readonly string LoadBalancerType;
        public readonly string Location;
        public readonly string? Name;
        public readonly int NetworkId;
        public readonly string NetworkIp;
        public readonly string NetworkZone;
        public readonly ImmutableArray<Outputs.GetLoadBalancersLoadBalancerServiceResult> Services;
        public readonly ImmutableArray<Outputs.GetLoadBalancersLoadBalancerTargetResult> Targets;

        [OutputConstructor]
        private GetLoadBalancersLoadBalancerResult(
            ImmutableArray<Outputs.GetLoadBalancersLoadBalancerAlgorithmResult> algorithms,

            bool deleteProtection,

            int id,

            string ipv4,

            string ipv6,

            ImmutableDictionary<string, string> labels,

            string loadBalancerType,

            string location,

            string? name,

            int networkId,

            string networkIp,

            string networkZone,

            ImmutableArray<Outputs.GetLoadBalancersLoadBalancerServiceResult> services,

            ImmutableArray<Outputs.GetLoadBalancersLoadBalancerTargetResult> targets)
        {
            Algorithms = algorithms;
            DeleteProtection = deleteProtection;
            Id = id;
            Ipv4 = ipv4;
            Ipv6 = ipv6;
            Labels = labels;
            LoadBalancerType = loadBalancerType;
            Location = location;
            Name = name;
            NetworkId = networkId;
            NetworkIp = networkIp;
            NetworkZone = networkZone;
            Services = services;
            Targets = targets;
        }
    }
}

// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Immutable;

namespace Pulumi.HCloud
{
    public static class Config
    {
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "IDE1006", Justification = 
        "Double underscore prefix used to avoid conflicts with variable names.")]
        private sealed class __Value<T>
        {
            private readonly Func<T> _getter;
            private T _value = default!;
            private bool _set;

            public __Value(Func<T> getter)
            {
                _getter = getter;
            }

            public T Get() => _set ? _value : _getter();

            public void Set(T value)
            {
                _value = value;
                _set = true;
            }
        }

        private static readonly global::Pulumi.Config __config = new global::Pulumi.Config("hcloud");

        private static readonly __Value<string?> _endpoint = new __Value<string?>(() => __config.Get("endpoint"));
        /// <summary>
        /// The Hetzner Cloud API endpoint, can be used to override the default API Endpoint https://api.hetzner.cloud/v1.
        /// </summary>
        public static string? Endpoint
        {
            get => _endpoint.Get();
            set => _endpoint.Set(value);
        }

        private static readonly __Value<string?> _pollFunction = new __Value<string?>(() => __config.Get("pollFunction"));
        /// <summary>
        /// The type of function to be used during the polling.
        /// </summary>
        public static string? PollFunction
        {
            get => _pollFunction.Get();
            set => _pollFunction.Set(value);
        }

        private static readonly __Value<string?> _pollInterval = new __Value<string?>(() => __config.Get("pollInterval"));
        /// <summary>
        /// The interval at which actions are polled by the client. Default `500ms`. Increase this interval if you run into rate limiting errors.
        /// </summary>
        public static string? PollInterval
        {
            get => _pollInterval.Get();
            set => _pollInterval.Set(value);
        }

        private static readonly __Value<string?> _token = new __Value<string?>(() => __config.Get("token"));
        /// <summary>
        /// The Hetzner Cloud API token, can also be specified with the HCLOUD_TOKEN environment variable.
        /// </summary>
        public static string? Token
        {
            get => _token.Get();
            set => _token.Set(value);
        }

    }
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.HCloud
{
    public static class GetDatacenters
    {
        /// <summary>
        /// Provides a list of available Hetzner Cloud Datacenters.
        /// 
        /// This resource may be useful to create highly available infrastructure, distributed across several Datacenters.
        /// </summary>
        public static Task<GetDatacentersResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatacentersResult>("hcloud:index/getDatacenters:getDatacenters", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Provides a list of available Hetzner Cloud Datacenters.
        /// 
        /// This resource may be useful to create highly available infrastructure, distributed across several Datacenters.
        /// </summary>
        public static Output<GetDatacentersResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatacentersResult>("hcloud:index/getDatacenters:getDatacenters", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetDatacentersResult
    {
        public readonly ImmutableArray<string> DatacenterIds;
        public readonly ImmutableArray<Outputs.GetDatacentersDatacenterResult> Datacenters;
        public readonly ImmutableArray<string> Descriptions;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Names;

        [OutputConstructor]
        private GetDatacentersResult(
            ImmutableArray<string> datacenterIds,

            ImmutableArray<Outputs.GetDatacentersDatacenterResult> datacenters,

            ImmutableArray<string> descriptions,

            string id,

            ImmutableArray<string> names)
        {
            DatacenterIds = datacenterIds;
            Datacenters = datacenters;
            Descriptions = descriptions;
            Id = id;
            Names = names;
        }
    }
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.HCloud
{
    public static class GetLocations
    {
        /// <summary>
        /// Provides a list of available Hetzner Cloud Locations.
        /// 
        /// This resource may be useful to create highly available infrastructure, distributed across several locations.
        /// </summary>
        public static Task<GetLocationsResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLocationsResult>("hcloud:index/getLocations:getLocations", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Provides a list of available Hetzner Cloud Locations.
        /// 
        /// This resource may be useful to create highly available infrastructure, distributed across several locations.
        /// </summary>
        public static Output<GetLocationsResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLocationsResult>("hcloud:index/getLocations:getLocations", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetLocationsResult
    {
        public readonly ImmutableArray<string> Descriptions;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> LocationIds;
        public readonly ImmutableArray<Outputs.GetLocationsLocationResult> Locations;
        public readonly ImmutableArray<string> Names;

        [OutputConstructor]
        private GetLocationsResult(
            ImmutableArray<string> descriptions,

            string id,

            ImmutableArray<string> locationIds,

            ImmutableArray<Outputs.GetLocationsLocationResult> locations,

            ImmutableArray<string> names)
        {
            Descriptions = descriptions;
            Id = id;
            LocationIds = locationIds;
            Locations = locations;
            Names = names;
        }
    }
}
